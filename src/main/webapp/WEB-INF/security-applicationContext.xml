<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- Global Security Settings -->

    <beans:bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />

    <!--if you want to use basic authentication and have the browser display a
     dialog box where the user can add their credentials, simply use the
     following configuration for your HTTP tag:
    <http>
        <intercept-url requires-channel="https" pattern="/login*" access="permitAll()" />
        <intercept-url requires-channel="https" pattern="/**" access="hasRole('ROLE_USER')" />
        <http-basic />
    </http>
    -->

    <!-- Form and Security Access Configuration
        //Very Basic and for browser based auth dialog
        <authentication-provider>
            <user-service>
                <user name="user" password="user" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>

        //Encoded Password
        <authentication-provider>
        <password-encoder hash="sha" />
        <user-service>
            <user name="user" password="12dea96fec20593566ab75692c9949596833adc9" authorities="ROLE_USER" />
        </user-service>
        </authentication-provider>

        //JDBC Authentication
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource" />
            <password-encoder hash="sha" />
        </authentication-provider>

        //JDBC custom query
        <authentication-provider>
          <jdbc-user-service data-source-ref="dataSource"
          users-by-username-query="select username,password from users where username=?"
           authorities-by-username-query="select u.username, r.authority from users u, roles r
           where u.userid = r.userid and u.username =?" />
        </authentication-provider>
    -->

    <!-- Form and Security Access Configuration -->
    <http use-expressions="true" access-denied-page="/403" disable-url-rewriting="true">
        <session-management invalid-session-url="/login?time=1">
            <concurrency-control max-sessions="1" expired-url="/login?time=1" />
        </session-management>
        <form-login login-page="/login" login-processing-url="/login.do"
                    default-target-url="/index.jsp" always-use-default-target="true"
                    authentication-failure-url="/login?err=1"
                    username-parameter="username"
                    password-parameter="password" />
        <logout logout-url="/logout" logout-success-url="/login?out=1"
                delete-cookies="JSESSIONID" invalidate-session="true" />
        <intercept-url requires-channel="http" pattern="/login*" access="permitAll()" />
        <intercept-url requires-channel="http" pattern="/**" access="hasRole('ROLE_USER')" />

        <!--If your application uses non-standard ports for HTTP and/or HTTPS,
        you can specify a list of port mappings as follows:-->
        <port-mappings>
            <port-mapping http="8080" https="8081"/>
        </port-mappings>
    </http>

    <!-- Authentication Providers for Form Login -->
    <!-- Select users and user_roles from database -->
    <authentication-manager alias="authenticationManager">
        <!-- ADD THE AUTHENTICATION PROVIDERS HERE -->
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
               users-by-username-query="select username,password,'true' as enabled from users where username=?"
               authorities-by-username-query="select u.username, r.authority from users u,
                authorities r where u.username=?"/>
        </authentication-provider>
    </authentication-manager>

    <!-- ADD THE DATASOURCES HERE -->
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
        p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.databaseurl}"
        p:username="${jdbc.username}"
        p:password="${jdbc.password}" />
</beans:beans>